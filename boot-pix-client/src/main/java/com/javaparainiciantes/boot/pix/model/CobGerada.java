/*
 * API Pix
 * A API Pix padroniza serviços oferecidos pelo PSP recebedor no contexto do arranjo Pix, como criação de cobrança, verificação de Pix recebidos, devolução e conciliação. Os serviços expostos pelo PSP recebedor permitem ao usuário recebedor estabelecer integração de sua automação com os serviços PIX do PSP.  # Evolução da API Pix As seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):  - Adição de novos recursos na API Pix. - Adição de novos parâmetros opcionais a cobranças. - Adição de novos campos em respostas da API Pix. - Alteração da ordem de campos. - Adição de novos elementos em enumerações  Mudanças compatíveis não geram nova versão da API Pix. Clientes devem estar preparados para lidar com essas mudanças sem quebrar.  Mudanças incompatíveis geram nova versão da API Pix.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: suporte.ti@bcb.gov.br
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.javaparainiciantes.boot.pix.model;

import java.net.URI;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import org.springframework.lang.Nullable;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Dados criados ou alterados da cobrança via API Pix
 */
@ApiModel(description = "Dados criados ou alterados da cobrança via API Pix")
@JsonPropertyOrder({
  CobGerada.JSON_PROPERTY_CALENDARIO,
  CobGerada.JSON_PROPERTY_STATUS,
  CobGerada.JSON_PROPERTY_TXID,
  CobGerada.JSON_PROPERTY_REVISAO,
  CobGerada.JSON_PROPERTY_LOCATION,
  CobGerada.JSON_PROPERTY_DEVEDOR,
  CobGerada.JSON_PROPERTY_VALOR,
  CobGerada.JSON_PROPERTY_CHAVE,
  CobGerada.JSON_PROPERTY_SOLICITACAO_PAGADOR,
  CobGerada.JSON_PROPERTY_INFO_ADICIONAIS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-06T23:21:02.042427800-03:00[America/Sao_Paulo]")
public class CobGerada {
  public static final String JSON_PROPERTY_CALENDARIO = "calendario";
  private CobCriacao calendario = null;

  public static final String JSON_PROPERTY_STATUS = "status";
  private CobStatus status;

  public static final String JSON_PROPERTY_TXID = "txid";
  private String txid;

  public static final String JSON_PROPERTY_REVISAO = "revisao";
  private Integer revisao;

  public static final String JSON_PROPERTY_LOCATION = "location";
  private URI location;

  public static final String JSON_PROPERTY_DEVEDOR = "devedor";
  private Pessoa devedor = null;

  public static final String JSON_PROPERTY_VALOR = "valor";
  private CobBaseValor valor;

  public static final String JSON_PROPERTY_CHAVE = "chave";
  private String chave;

  public static final String JSON_PROPERTY_SOLICITACAO_PAGADOR = "solicitacaoPagador";
  private String solicitacaoPagador;

  public static final String JSON_PROPERTY_INFO_ADICIONAIS = "infoAdicionais";
  private List<CobBaseInfoAdicionais> infoAdicionais = null;


  public CobGerada calendario(CobCriacao calendario) {
    
    this.calendario = calendario;
    return this;
  }

   /**
   * Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.
   * @return calendario
  **/
  @ApiModelProperty(required = true, value = "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.")
  @JsonProperty(JSON_PROPERTY_CALENDARIO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CobCriacao getCalendario() {
    return calendario;
  }


  public void setCalendario(CobCriacao calendario) {
    this.calendario = calendario;
  }


  public CobGerada status(CobStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CobStatus getStatus() {
    return status;
  }


  public void setStatus(CobStatus status) {
    this.status = status;
  }


  public CobGerada txid(String txid) {
    
    this.txid = txid;
    return this;
  }

   /**
   * # Identificador da transação  O campo txid, obrigatório, determina o identificador da transação. O objetivo desse campo é ser um elemento que possibilite ao PSP do recebedor apresentar ao usuário recebedor a funcionalidade de conciliação de pagamentos.  Na pacs.008, é referenciado como &#x60;TransactionIdentification &lt;txId&gt;&#x60; ou &#x60;idConciliacaoRecebedor&#x60;. O preenchimento do campo txid é limitado a 35 caracteres na pacs.008.  Em termos de fluxo de funcionamento, o txid é lido pelo aplicativo do PSP do pagador e,  depois de confirmado o pagamento, é enviado para o SPI via pacs.008.  Uma pacs.008 também é enviada ao PSP do recebedor, contendo, além de todas as informações usuais  do pagamento, o txid. Ao perceber um recebimento dotado de txid, o PSP do recebedor está apto a se comunicar com o usuário recebedor,  informando que um pagamento específico foi liquidado.  O txid é criado exclusivamente pelo usuário recebedor e está sob sua responsabilidade. O txid, no contexto de representação de uma cobrança, é único por CPF/CNPJ do usuário recebedor. Cabe ao  PSP recebedor validar essa regra na API PIX. 
   * @return txid
  **/
  @ApiModelProperty(required = true, value = "# Identificador da transação  O campo txid, obrigatório, determina o identificador da transação. O objetivo desse campo é ser um elemento que possibilite ao PSP do recebedor apresentar ao usuário recebedor a funcionalidade de conciliação de pagamentos.  Na pacs.008, é referenciado como `TransactionIdentification <txId>` ou `idConciliacaoRecebedor`. O preenchimento do campo txid é limitado a 35 caracteres na pacs.008.  Em termos de fluxo de funcionamento, o txid é lido pelo aplicativo do PSP do pagador e,  depois de confirmado o pagamento, é enviado para o SPI via pacs.008.  Uma pacs.008 também é enviada ao PSP do recebedor, contendo, além de todas as informações usuais  do pagamento, o txid. Ao perceber um recebimento dotado de txid, o PSP do recebedor está apto a se comunicar com o usuário recebedor,  informando que um pagamento específico foi liquidado.  O txid é criado exclusivamente pelo usuário recebedor e está sob sua responsabilidade. O txid, no contexto de representação de uma cobrança, é único por CPF/CNPJ do usuário recebedor. Cabe ao  PSP recebedor validar essa regra na API PIX. ")
  @JsonProperty(JSON_PROPERTY_TXID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTxid() {
    return txid;
  }


  public void setTxid(String txid) {
    this.txid = txid;
  }


  public CobGerada revisao(Integer revisao) {
    
    this.revisao = revisao;
    return this;
  }

   /**
   * Revisão da cobrança. Sempre começa em zero. Sempre varia em acréscimos de 1.
   * @return revisao
  **/
  @ApiModelProperty(required = true, value = "Revisão da cobrança. Sempre começa em zero. Sempre varia em acréscimos de 1.")
  @JsonProperty(JSON_PROPERTY_REVISAO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRevisao() {
    return revisao;
  }


  public void setRevisao(Integer revisao) {
    this.revisao = revisao;
  }


  public CobGerada location(URI location) {
    
    this.location = location;
    return this;
  }

   /**
   * Localização do Payload a ser informada na criação da cobrança.
   * @return location
  **/
  @ApiModelProperty(example = "pix.example.com/qr/2353c790-eefb-11ea-adc1-0242ac120002", required = true, value = "Localização do Payload a ser informada na criação da cobrança.")
  @JsonProperty(JSON_PROPERTY_LOCATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public URI getLocation() {
    return location;
  }


  public void setLocation(URI location) {
    this.location = location;
  }


  public CobGerada devedor(Pessoa devedor) {
    
    this.devedor = devedor;
    return this;
  }

   /**
   * Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo pagador.cpf e campo pagador.cnpj estejam preenchidos ao mesmo tempo. Se o campo pagador.cnpj está preenchido, então o campo pagador.cpf não pode estar preenchido, e vice-versa. Se o campo pagador.nome está preenchido, então deve existir ou um pagador.cpf ou um campo pagador.cnpj preenchido.
   * @return devedor
  **/
  @Nullable
  @ApiModelProperty(value = "Os campos aninhados sob o objeto devedor são opcionais e identificam o devedor, ou seja, a pessoa ou a instituição a quem a cobrança está endereçada. Não identifica, necessariamente, quem irá efetivamente realizar o pagamento. Um CPF pode ser o devedor de uma cobrança, mas pode acontecer de outro CPF realizar, efetivamente, o pagamento do documento. Não é permitido que o campo pagador.cpf e campo pagador.cnpj estejam preenchidos ao mesmo tempo. Se o campo pagador.cnpj está preenchido, então o campo pagador.cpf não pode estar preenchido, e vice-versa. Se o campo pagador.nome está preenchido, então deve existir ou um pagador.cpf ou um campo pagador.cnpj preenchido.")
  @JsonProperty(JSON_PROPERTY_DEVEDOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Pessoa getDevedor() {
    return devedor;
  }


  public void setDevedor(Pessoa devedor) {
    this.devedor = devedor;
  }


  public CobGerada valor(CobBaseValor valor) {
    
    this.valor = valor;
    return this;
  }

   /**
   * Get valor
   * @return valor
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VALOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CobBaseValor getValor() {
    return valor;
  }


  public void setValor(CobBaseValor valor) {
    this.valor = valor;
  }


  public CobGerada chave(String chave) {
    
    this.chave = chave;
    return this;
  }

   /**
   * O campo chave, obrigatório, determina a chave Pix registrada no DICT que será utilizada para a cobrança. Essa chave será lida pelo aplicativo do PSP do pagador para consulta ao DICT, que retornará a informação que identificará o recebedor da cobrança.
   * @return chave
  **/
  @ApiModelProperty(required = true, value = "O campo chave, obrigatório, determina a chave Pix registrada no DICT que será utilizada para a cobrança. Essa chave será lida pelo aplicativo do PSP do pagador para consulta ao DICT, que retornará a informação que identificará o recebedor da cobrança.")
  @JsonProperty(JSON_PROPERTY_CHAVE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getChave() {
    return chave;
  }


  public void setChave(String chave) {
    this.chave = chave;
  }


  public CobGerada solicitacaoPagador(String solicitacaoPagador) {
    
    this.solicitacaoPagador = solicitacaoPagador;
    return this;
  }

   /**
   * O campo solicitacaoPagador, opcional, determina um texto a ser apresentado ao pagador para que ele possa digitar uma informação correlata, em formato livre, a ser enviada ao recebedor. Esse texto será preenchido, na pacs.008, pelo PSP do pagador, no campo RemittanceInformation &lt;RmtInf&gt;. O tamanho do campo &lt;RmtInf&gt; na pacs.008 está limitado a 140 caracteres.
   * @return solicitacaoPagador
  **/
  @Nullable
  @ApiModelProperty(value = "O campo solicitacaoPagador, opcional, determina um texto a ser apresentado ao pagador para que ele possa digitar uma informação correlata, em formato livre, a ser enviada ao recebedor. Esse texto será preenchido, na pacs.008, pelo PSP do pagador, no campo RemittanceInformation <RmtInf>. O tamanho do campo <RmtInf> na pacs.008 está limitado a 140 caracteres.")
  @JsonProperty(JSON_PROPERTY_SOLICITACAO_PAGADOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSolicitacaoPagador() {
    return solicitacaoPagador;
  }


  public void setSolicitacaoPagador(String solicitacaoPagador) {
    this.solicitacaoPagador = solicitacaoPagador;
  }


  public CobGerada infoAdicionais(List<CobBaseInfoAdicionais> infoAdicionais) {
    
    this.infoAdicionais = infoAdicionais;
    return this;
  }

  public CobGerada addInfoAdicionaisItem(CobBaseInfoAdicionais infoAdicionaisItem) {
    if (this.infoAdicionais == null) {
      this.infoAdicionais = new ArrayList<>();
    }
    this.infoAdicionais.add(infoAdicionaisItem);
    return this;
  }

   /**
   * Cada respectiva informação adicional contida na lista (nome e valor) deve ser apresentada ao pagador.
   * maximum: 50
   * @return infoAdicionais
  **/
  @Nullable
  @ApiModelProperty(value = "Cada respectiva informação adicional contida na lista (nome e valor) deve ser apresentada ao pagador.")
  @JsonProperty(JSON_PROPERTY_INFO_ADICIONAIS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<CobBaseInfoAdicionais> getInfoAdicionais() {
    return infoAdicionais;
  }


  public void setInfoAdicionais(List<CobBaseInfoAdicionais> infoAdicionais) {
    this.infoAdicionais = infoAdicionais;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CobGerada cobGerada = (CobGerada) o;
    return Objects.equals(this.calendario, cobGerada.calendario) &&
        Objects.equals(this.status, cobGerada.status) &&
        Objects.equals(this.txid, cobGerada.txid) &&
        Objects.equals(this.revisao, cobGerada.revisao) &&
        Objects.equals(this.location, cobGerada.location) &&
        Objects.equals(this.devedor, cobGerada.devedor) &&
        Objects.equals(this.valor, cobGerada.valor) &&
        Objects.equals(this.chave, cobGerada.chave) &&
        Objects.equals(this.solicitacaoPagador, cobGerada.solicitacaoPagador) &&
        Objects.equals(this.infoAdicionais, cobGerada.infoAdicionais);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calendario, status, txid, revisao, location, devedor, valor, chave, solicitacaoPagador, infoAdicionais);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CobGerada {\n");
    sb.append("    calendario: ").append(toIndentedString(calendario)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    txid: ").append(toIndentedString(txid)).append("\n");
    sb.append("    revisao: ").append(toIndentedString(revisao)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    devedor: ").append(toIndentedString(devedor)).append("\n");
    sb.append("    valor: ").append(toIndentedString(valor)).append("\n");
    sb.append("    chave: ").append(toIndentedString(chave)).append("\n");
    sb.append("    solicitacaoPagador: ").append(toIndentedString(solicitacaoPagador)).append("\n");
    sb.append("    infoAdicionais: ").append(toIndentedString(infoAdicionais)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

