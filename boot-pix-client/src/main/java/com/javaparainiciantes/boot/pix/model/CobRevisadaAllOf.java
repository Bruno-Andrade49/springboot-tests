/*
 * API Pix
 * A API Pix padroniza serviços oferecidos pelo PSP recebedor no contexto do arranjo Pix, como criação de cobrança, verificação de Pix recebidos, devolução e conciliação. Os serviços expostos pelo PSP recebedor permitem ao usuário recebedor estabelecer integração de sua automação com os serviços PIX do PSP.  # Evolução da API Pix As seguintes mudanças são esperadas e consideradas retro-compatíveis (_backwards-compatibility_):  - Adição de novos recursos na API Pix. - Adição de novos parâmetros opcionais a cobranças. - Adição de novos campos em respostas da API Pix. - Alteração da ordem de campos. - Adição de novos elementos em enumerações  Mudanças compatíveis não geram nova versão da API Pix. Clientes devem estar preparados para lidar com essas mudanças sem quebrar.  Mudanças incompatíveis geram nova versão da API Pix.
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: suporte.ti@bcb.gov.br
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.javaparainiciantes.boot.pix.model;

import java.util.Objects;

import org.springframework.lang.Nullable;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

import io.swagger.annotations.ApiModelProperty;

/**
 * CobRevisadaAllOf
 */
@JsonPropertyOrder({
  CobRevisadaAllOf.JSON_PROPERTY_CALENDARIO,
  CobRevisadaAllOf.JSON_PROPERTY_STATUS
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-06T23:21:02.042427800-03:00[America/Sao_Paulo]")
public class CobRevisadaAllOf {
  public static final String JSON_PROPERTY_CALENDARIO = "calendario";
  private CobExpiracao calendario = null;

  public static final String JSON_PROPERTY_STATUS = "status";
  private CobStatus status = null;


  public CobRevisadaAllOf calendario(CobExpiracao calendario) {
    
    this.calendario = calendario;
    return this;
  }

   /**
   * Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.
   * @return calendario
  **/
  @Nullable
  @ApiModelProperty(value = "Os campos aninhados sob o identificador calendário organizam informações a respeito de controle de tempo da cobrança.")
  @JsonProperty(JSON_PROPERTY_CALENDARIO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CobExpiracao getCalendario() {
    return calendario;
  }


  public void setCalendario(CobExpiracao calendario) {
    this.calendario = calendario;
  }


  public CobRevisadaAllOf status(CobStatus status) {
    
    this.status = status;
    return this;
  }

   /**
   * O único status que pode ser informado na revisão da Cobrança é o REMOVIDA_PELO_USUARIO_RECEBEDOR
   * @return status
  **/
  @Nullable
  @ApiModelProperty(value = "O único status que pode ser informado na revisão da Cobrança é o REMOVIDA_PELO_USUARIO_RECEBEDOR")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public CobStatus getStatus() {
    return status;
  }


  public void setStatus(CobStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CobRevisadaAllOf cobRevisadaAllOf = (CobRevisadaAllOf) o;
    return Objects.equals(this.calendario, cobRevisadaAllOf.calendario) &&
        Objects.equals(this.status, cobRevisadaAllOf.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calendario, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CobRevisadaAllOf {\n");
    sb.append("    calendario: ").append(toIndentedString(calendario)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

