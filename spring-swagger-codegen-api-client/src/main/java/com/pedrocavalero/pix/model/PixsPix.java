/*
 * pix_recebimentos
 * APis Pix Recebimentos para Clientes (regulatórias). 
 *
 * OpenAPI spec version: 1.40.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.pedrocavalero.pix.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.pedrocavalero.pix.model.PixsDevolucoes;
import com.pedrocavalero.pix.model.PixsPagador;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * PixsPix
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-20T11:54:19.646-03:00")
public class PixsPix {
  @JsonProperty("horario")
  private OffsetDateTime horario = null;

  @JsonProperty("devolucoes")
  private List<PixsDevolucoes> devolucoes = null;

  @JsonProperty("pagador")
  private PixsPagador pagador = null;

  @JsonProperty("valor")
  private String valor = null;

  @JsonProperty("txid")
  private String txid = null;

  @JsonProperty("infoPagador")
  private String infoPagador = null;

  @JsonProperty("endToEndId")
  private String endToEndId = null;

  public PixsPix horario(OffsetDateTime horario) {
    this.horario = horario;
    return this;
  }

   /**
   * Horário do pagamento.
   * @return horario
  **/
  @ApiModelProperty(example = "2020-09-10T13:03:33.902Z", required = true, value = "Horário do pagamento.")
  public OffsetDateTime getHorario() {
    return horario;
  }

  public void setHorario(OffsetDateTime horario) {
    this.horario = horario;
  }

  public PixsPix devolucoes(List<PixsDevolucoes> devolucoes) {
    this.devolucoes = devolucoes;
    return this;
  }

  public PixsPix addDevolucoesItem(PixsDevolucoes devolucoesItem) {
    if (this.devolucoes == null) {
      this.devolucoes = new ArrayList<PixsDevolucoes>();
    }
    this.devolucoes.add(devolucoesItem);
    return this;
  }

   /**
   * Devolucoes registradas no documento
   * @return devolucoes
  **/
  @ApiModelProperty(value = "Devolucoes registradas no documento")
  public List<PixsDevolucoes> getDevolucoes() {
    return devolucoes;
  }

  public void setDevolucoes(List<PixsDevolucoes> devolucoes) {
    this.devolucoes = devolucoes;
  }

  public PixsPix pagador(PixsPagador pagador) {
    this.pagador = pagador;
    return this;
  }

   /**
   * Get pagador
   * @return pagador
  **/
  @ApiModelProperty(value = "")
  public PixsPagador getPagador() {
    return pagador;
  }

  public void setPagador(PixsPagador pagador) {
    this.pagador = pagador;
  }

  public PixsPix valor(String valor) {
    this.valor = valor;
    return this;
  }

   /**
   * Valor do pagamento.
   * @return valor
  **/
  @ApiModelProperty(example = "100.00", required = true, value = "Valor do pagamento.")
  public String getValor() {
    return valor;
  }

  public void setValor(String valor) {
    this.valor = valor;
  }

  public PixsPix txid(String txid) {
    this.txid = txid;
    return this;
  }

   /**
   * ID de identificação do documento entre os bancos e o cliente emissor.O campo txid é obrigatório e determina o identificador da transação.O objetivo desse campo é ser um elemento que possibilite a conciliação de pagamentos. O txid é criado exclusivamente pelo usuário recebedor e está sob sua responsabilidade. Deve ser único por CNPJ do recebedor. Apesar de possuir o tamanho de 35 posições (PAC008), para QR Code Estático o tamanho máximo permitido é de 25 posições (limitação EMV). No caso do QR Code dinâmico o campo deve possuir de 26 posição até 35 posições. Os caracteres permitidos no contexto do Pix para o campo txId são:Letras minúsculas, de ‘a’ a ‘z’, Letras maiúsculas, de ‘A’ a ‘Z’, Dígitos decimais, de ‘0’ a ‘9’
   * @return txid
  **/
  @ApiModelProperty(example = "cd1fe328c875481285a6f233ae", value = "ID de identificação do documento entre os bancos e o cliente emissor.O campo txid é obrigatório e determina o identificador da transação.O objetivo desse campo é ser um elemento que possibilite a conciliação de pagamentos. O txid é criado exclusivamente pelo usuário recebedor e está sob sua responsabilidade. Deve ser único por CNPJ do recebedor. Apesar de possuir o tamanho de 35 posições (PAC008), para QR Code Estático o tamanho máximo permitido é de 25 posições (limitação EMV). No caso do QR Code dinâmico o campo deve possuir de 26 posição até 35 posições. Os caracteres permitidos no contexto do Pix para o campo txId são:Letras minúsculas, de ‘a’ a ‘z’, Letras maiúsculas, de ‘A’ a ‘Z’, Dígitos decimais, de ‘0’ a ‘9’")
  public String getTxid() {
    return txid;
  }

  public void setTxid(String txid) {
    this.txid = txid;
  }

  public PixsPix infoPagador(String infoPagador) {
    this.infoPagador = infoPagador;
    return this;
  }

   /**
   * Informação livre do pagador.
   * @return infoPagador
  **/
  @ApiModelProperty(example = "Reforma da casa", value = "Informação livre do pagador.")
  public String getInfoPagador() {
    return infoPagador;
  }

  public void setInfoPagador(String infoPagador) {
    this.infoPagador = infoPagador;
  }

  public PixsPix endToEndId(String endToEndId) {
    this.endToEndId = endToEndId;
    return this;
  }

   /**
   * Id fim a fim da transação.Esse campo é o &#39;id do pagamento&#39;. Transita nas mensagens de recebimento dos QR Codes e transferências.
   * @return endToEndId
  **/
  @ApiModelProperty(example = "E12345678202009091221abcdef12345", required = true, value = "Id fim a fim da transação.Esse campo é o 'id do pagamento'. Transita nas mensagens de recebimento dos QR Codes e transferências.")
  public String getEndToEndId() {
    return endToEndId;
  }

  public void setEndToEndId(String endToEndId) {
    this.endToEndId = endToEndId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PixsPix pixsPix = (PixsPix) o;
    return Objects.equals(this.horario, pixsPix.horario) &&
        Objects.equals(this.devolucoes, pixsPix.devolucoes) &&
        Objects.equals(this.pagador, pixsPix.pagador) &&
        Objects.equals(this.valor, pixsPix.valor) &&
        Objects.equals(this.txid, pixsPix.txid) &&
        Objects.equals(this.infoPagador, pixsPix.infoPagador) &&
        Objects.equals(this.endToEndId, pixsPix.endToEndId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(horario, devolucoes, pagador, valor, txid, infoPagador, endToEndId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PixsPix {\n");
    
    sb.append("    horario: ").append(toIndentedString(horario)).append("\n");
    sb.append("    devolucoes: ").append(toIndentedString(devolucoes)).append("\n");
    sb.append("    pagador: ").append(toIndentedString(pagador)).append("\n");
    sb.append("    valor: ").append(toIndentedString(valor)).append("\n");
    sb.append("    txid: ").append(toIndentedString(txid)).append("\n");
    sb.append("    infoPagador: ").append(toIndentedString(infoPagador)).append("\n");
    sb.append("    endToEndId: ").append(toIndentedString(endToEndId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

